name: Build Wheels

on:
  push:     { tags: ['v*'] }
  pull_request: { branches: [main] }
  workflow_dispatch:

jobs:
  build_wheels:
    name: ${{ matrix.pyver }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pyver: ["cp39-manylinux_x86_64",
                "cp310-manylinux_x86_64",
                "cp311-manylinux_x86_64"]

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v4
      with: { python-version: "3.10" }

    - run: python -m pip install -U pip cibuildwheel==2.16.2

    - name: Build wheel inside CUDA image
      env:
        CIBW_BUILD: ${{ matrix.pyver }}
        CIBW_SKIP: "*-musllinux_*"
        CIBW_MANYLINUX_X86_64_IMAGE: pytorch/manylinux-builder:cuda12.1
        CIBW_BUILD_VERBOSITY: "1"
        CIBW_SKIP_REPAIR: "1"

        CIBW_BEFORE_BUILD: |
          pip install --no-cache-dir -U pip wheel setuptools ninja \
          && pip install --no-cache-dir torch==2.3.0+cpu \
                -f https://download.pytorch.org/whl/torch_stable.html
        PIP_NO_CACHE_DIR: "off"

        CIBW_TEST_REQUIRES: "pytest numpy"
        CIBW_TEST_COMMAND: pytest {project}/tests -m "not gpu"
      run: python -m cibuildwheel --output-dir wheelhouse

    - name: Clean runner disk
      if: always()
      run: |
        sudo rm -rf /usr/local/lib/android /usr/share/dotnet
        docker image prune -af -f
        df -h

    - uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.pyver }}
        path: wheelhouse/*.whl          
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with: {python-version: "3.10"}
      - run: |
          python -m pip install --upgrade pip build
          python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish wheels
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-linux-*
          path: dist
          merge-multiple: true

      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      
      - name: ðŸ“¤ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
